{"version":3,"file":"component---src-pages-index-jsx-947fd67269be47660d5b.js","mappings":"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","sources":["webpack://front-end-lab-dev/./src/components/Pagination.jsx","webpack://front-end-lab-dev/./src/components/PostListLayout.jsx","webpack://front-end-lab-dev/./src/components/SubscribeForm.jsx","webpack://front-end-lab-dev/./src/components/SocialMedia.jsx","webpack://front-end-lab-dev/./src/pages/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nconst Pagination = ({ length, callBackResult }) => {\n  const [page, setPage] = useState(0);\n\n  const handleClick = (index) => {\n    if (callBackResult) {\n      callBackResult(index);\n    }\n    setPage(index);\n  };\n\n  const paginationContent = Array.from({ length }).map((_, index) => {\n    const firstPage = index === 0;\n    const pageNum = index + 1;\n    const url = firstPage ? \"/\" : `/?page=${pageNum}`;\n    const isSelected = page === index;\n    const disableClass = isSelected ? \" pointer-events-none\" : \"\";\n\n    return (\n      <Link\n        to={url}\n        onClick={() => handleClick(index)}\n        className={`relative rounded-md border border-blue shadow-sm px-4 py-2 text-sm ${\n          isSelected ? \"bg-blue text-white\" : \"bg-white text-blue\"\n        }${disableClass}`}\n        disabled={isSelected}\n        key={`page-${pageNum}`}\n      >\n        {pageNum}\n      </Link>\n    );\n  });\n\n  return (\n    <nav\n      className=\"flex justify-end space-x-2 rounded-md mt-10\"\n      aria-label=\"Page navigation\"\n    >\n      {paginationContent}\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  length: PropTypes.number.isRequired,\n  callBackResult: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import { Link } from \"gatsby\";\nimport React, { useRef, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Image from \"./Image\";\nimport Pagination from \"./Pagination\";\nimport { POSTS_PER_PAGE } from \"../config/constants\";\n\nconst chunkList = (list, size) => {\n  let length = list.length;\n  let chunked = [];\n  Array.from({ length: Math.ceil(length / size) }, (val, i) => {\n    return chunked.push(list.slice(i * size, i * size + size));\n  });\n  return chunked;\n};\n\nconst PostListLayout = ({ data }) => {\n  const selectedDataIndex = useRef(0);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const memoizedData = useMemo(() => chunkList(data, POSTS_PER_PAGE), []);\n  const chunkPostLength = memoizedData.length;\n\n  const handlePaginationPage = (currentNum) => {\n    selectedDataIndex.current = currentNum;\n  };\n\n  const postCard = memoizedData[selectedDataIndex.current].map(\n    ({ id, frontmatter, slug }, index) => (\n      <article\n        className=\"relative rounded-lg shadow-sm bg-white pb-5 transition ease-in-out delay-150 hover:-translate-y-1 hover:scale-110 duration-300\"\n        key={id}\n      >\n        <div className=\"mx-auto w-full\">\n          <Image\n            className=\"rounded-t-lg h-56\"\n            filename={frontmatter?.featuredImage}\n            title={frontmatter?.title}\n            withFallback={!frontmatter?.featuredImage}\n          />\n        </div>\n        <header className=\"mt-2 px-5\">\n          <time\n            className=\"text-gray font-light text-base\"\n            dateTime={frontmatter?.datetime}\n          >\n            {frontmatter?.date}\n          </time>\n          <h3 className=\"text-xl text-black font-semibold m-0\">\n            <Link className=\"hover:underline\" to={`/${slug}`}>\n              {frontmatter?.title}\n            </Link>\n          </h3>\n        </header>\n      </article>\n    )\n  );\n\n  return (\n    <>\n      <section className=\"mt-16 grid gap-10 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-4\">\n        {postCard}\n      </section>\n      <Pagination\n        length={chunkPostLength}\n        callBackResult={handlePaginationPage}\n      />\n    </>\n  );\n};\n\nPostListLayout.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n\nexport default PostListLayout;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Newsletter = ({ actionUrl, handleSubmittedForm }) => {\n  const [isSubmited, setSubmit] = useState(false);\n  const [formInputs, setFormInputs] = useState({\n    email: \"\",\n  });\n  let formContent;\n  if (!actionUrl) return;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { email } = formInputs;\n\n    //{\"success\":false,\"errors\":{\"fields\":{\"email\":[\"The email field is required.\"]}}}\n\n    const params = `fields[email]=${email}`;\n    //&fields[name]=...\n\n    // Send a POST request\n    fetch(actionUrl, {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      },\n      method: \"POST\",\n      body: params,\n    })\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200) {\n          setSubmit(true);\n          if (handleSubmittedForm) {\n            handleSubmittedForm(true);\n          }\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormInputs({\n      ...formInputs,\n      [name]: value,\n    });\n  };\n\n  formContent = (\n    <div className=\"flex flex-wrap mt-10\" onSubmit={handleSubmit}>\n      <form className=\"relative flex rounded-full w-full max-w-sm bg-gray-light order-last md:order-first\">\n        <input\n          type=\"email\"\n          className=\"form-input px-4 py-3 rounded-full border-0 bg-gray-light w-full\"\n          placeholder=\"Your email address\"\n          name=\"email\"\n          autocomplete=\"email\"\n          value={formInputs.email}\n          onChange={handleInputChange}\n          required\n        />\n\n        <button\n          className=\"rounded-full text-xl bg-black hover:bg-blue text-white py-1 px-4 ml-auto min-w-fit\"\n          type=\"submit\"\n        >\n          Subscribe\n        </button>\n      </form>\n      <p className=\"font-light text-lg leading-tight mb-3 md:my-auto ml-3\">\n        If you want to be updated <br className=\"hidden md:block\" />\n        when a new post is out, sign up!\n      </p>\n    </div>\n  );\n\n  if (isSubmited) {\n    formContent = (\n      <div className=\"inline-block border border-emerald-500 p-3 rounded\">\n        <p className=\"text-black font-bold text-xl mb-0\">Thank you!</p>\n        <p className=\"mb-0 text-emerald-500\">\n          You have successfully joined our subscriber list.\n        </p>\n      </div>\n    );\n  }\n\n  return formContent;\n};\n\nNewsletter.defaultProps = {\n  handleSubmittedForm: null,\n};\n\nNewsletter.propTypes = {\n  handleSubmittedForm: PropTypes.func,\n};\n\nexport default Newsletter;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { URL_LIST, SOCIA_MEDIA_LIST } from \"../config/constants\";\n\nconst SocialMedia = ({ text, className }) => {\n  const twitterURL = URL_LIST[\"twitter\"];\n  const linkedinURL = URL_LIST[\"linkedin\"];\n  const githubURL = URL_LIST[\"github\"];\n\n  const Twitter = SOCIA_MEDIA_LIST[\"twitter\"];\n  const Linkedin = SOCIA_MEDIA_LIST[\"linkedin\"];\n  const Github = SOCIA_MEDIA_LIST[\"github\"];\n\n  return (\n    <div className={className ? className : \"\"}>\n      <p className=\"text-xl my-auto\">{text}</p>\n      <a\n        href={twitterURL}\n        aria-label=\"Twitter\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <Twitter className=\"text-gray text-3xl\" />\n      </a>\n      <a\n        href={linkedinURL}\n        aria-label=\"Linkedin\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <Linkedin className=\"text-gray text-3xl\" />\n      </a>\n      <a href={githubURL} aria-label=\"Github\" target=\"_blank\" rel=\"noreferrer\">\n        <Github className=\"text-gray text-3xl\" />\n      </a>\n    </div>\n  );\n};\n\nexport default SocialMedia;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Seo from \"../components/Seo\";\nimport PostListLayout from \"../components/PostListLayout\";\nimport SubscribeForm from \"../components/SubscribeForm\";\nimport SocialMedia from \"../components/SocialMedia\";\n\nconst IndexPage = ({ data, location }) => {\n  const { nodes } = data.allMdx;\n\n  const intro = (\n    <h1 className=\"max-w-5xl tracking-tight text-black text-5xl font-bold lg:text-6xl xl:text-7xl\">\n      Hey, I'm Andreas,\n      <br />\n      <span className=\"text-blue\">Web developer</span>.\n    </h1>\n  );\n\n  const welcome = (\n    <>\n      <h2 className=\"font-light text-4xl mt-5\">Welcome to my blog.</h2>\n      <p className=\"mt-4 max-w-3xl text-2xl\">\n        I build things for the web. I'm focused on build lorem ipsum dolor sit\n        amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n        labore et.\n      </p>\n    </>\n  );\n\n  return (\n    <>\n      <Seo title=\"Andreas Web developer\" />\n      {intro}\n      {welcome}\n      <SubscribeForm actionUrl=\"https://assets.mailerlite.com/jsonp/41128/forms/54218114393441507/subscribe\" />\n      <SocialMedia className=\"flex space-x-4 mt-3 ml-3\" text=\"Follow me on:\" />\n      <PostListLayout data={nodes} />\n    </>\n  );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query SITE_INDEX_QUERY {\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        id\n        slug\n        frontmatter {\n          title\n          datetime: date\n          date(formatString: \"DD MMMM YYYY\")\n          featuredImage {\n            childImageSharp {\n              gatsbyImageData(\n                width: 300\n                placeholder: BLURRED\n                formats: [AUTO, WEBP, AVIF]\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["length","callBackResult","useState","page","setPage","paginationContent","Array","from","map","_","index","pageNum","url","isSelected","disableClass","Link","to","onClick","handleClick","className","disabled","key","data","selectedDataIndex","useRef","memoizedData","useMemo","list","size","POSTS_PER_PAGE","chunked","Math","ceil","val","i","push","slice","chunkPostLength","postCard","current","id","frontmatter","slug","Image","filename","featuredImage","title","withFallback","dateTime","datetime","date","currentNum","Newsletter","formContent","actionUrl","handleSubmittedForm","isSubmited","setSubmit","email","formInputs","setFormInputs","onSubmit","e","preventDefault","fetch","headers","method","body","then","response","console","log","status","catch","error","type","placeholder","name","autocomplete","value","onChange","target","required","defaultProps","text","twitterURL","URL_LIST","linkedinURL","githubURL","Twitter","SOCIA_MEDIA_LIST","Linkedin","Github","href","rel","nodes","location","allMdx","intro","welcome","Seo","SubscribeForm"],"sourceRoot":""}