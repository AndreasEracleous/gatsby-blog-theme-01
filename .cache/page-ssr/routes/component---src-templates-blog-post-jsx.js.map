{"version":3,"file":"component---src-templates-blog-post-jsx.js","mappings":"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","sources":["webpack://gatsby-blog-theme-01/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://gatsby-blog-theme-01/./node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack://gatsby-blog-theme-01/./node_modules/camelcase/index.js","webpack://gatsby-blog-theme-01/./node_modules/gatsby-plugin-mdx/index.js","webpack://gatsby-blog-theme-01/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://gatsby-blog-theme-01/../src/image-utils.ts","webpack://gatsby-blog-theme-01/../src/components/hooks.ts","webpack://gatsby-blog-theme-01/../src/components/picture.tsx","webpack://gatsby-blog-theme-01/../src/components/placeholder.tsx","webpack://gatsby-blog-theme-01/../src/components/main-image.tsx","webpack://gatsby-blog-theme-01/../src/components/layout-wrapper.tsx","webpack://gatsby-blog-theme-01/../src/components/gatsby-image.server.tsx","webpack://gatsby-blog-theme-01/../src/components/static-image.server.tsx","webpack://gatsby-blog-theme-01/./src/components/Image.jsx","webpack://gatsby-blog-theme-01/./src/components/Seo.jsx","webpack://gatsby-blog-theme-01/./src/components/PostLayout.jsx","webpack://gatsby-blog-theme-01/./src/templates/BlogPost.jsx"],"sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","/* eslint-disable no-unused-expressions */\nimport { stripIndent } from \"common-tags\"\nimport camelCase from \"camelcase\"\nimport { IGatsbyImageData } from \".\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(stripIndent`\n    The requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* eslint-disable no-unused-expressions */\nimport {\n  useState,\n  CSSProperties,\n  useEffect,\n  HTMLAttributes,\n  ImgHTMLAttributes,\n  ReactEventHandler,\n  SetStateAction,\n  Dispatch,\n  RefObject,\n} from \"react\"\nimport { Node } from \"gatsby\"\nimport { PlaceholderProps } from \"./placeholder\"\nimport { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport {\n  IGatsbyImageHelperArgs,\n  generateImageData,\n  Layout,\n  EVERY_BREAKPOINT,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\nconst imageCache = new Set<string>()\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport function storeImageloaded(cacheKey?: string): void {\n  if (cacheKey) {\n    imageCache.add(cacheKey)\n  }\n}\n\nexport function hasImageLoaded(cacheKey: string): boolean {\n  return imageCache.has(cacheKey)\n}\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type FileNode = Node & {\n  childImageSharp?: IGatsbyImageDataParent<Node>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nexport type ImageDataLike = FileNode | IGatsbyImageDataParent | IGatsbyImageData\nexport const getImage = (node: ImageDataLike): IGatsbyImageData | undefined => {\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport async function applyPolyfill(\n  ref: RefObject<HTMLImageElement>\n): Promise<void> {\n  if (!(`objectFitPolyfill` in window)) {\n    await import(\n      // @ts-ignore typescript can't find the module for some reason ¯\\_(ツ)_/¯\n      /* webpackChunkName: \"gatsby-plugin-image-objectfit-polyfill\" */ `objectFitPolyfill`\n    )\n  }\n  ;(window as any).objectFitPolyfill(ref.current)\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  toggleLoaded?: (loaded: boolean) => void,\n  cacheKey?: string,\n  ref?: RefObject<HTMLImageElement>,\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  const onLoad: ReactEventHandler<HTMLImageElement> = function (e) {\n    if (isLoaded) {\n      return\n    }\n\n    storeImageloaded(cacheKey)\n\n    const target = e.currentTarget\n    const img = new Image()\n    img.src = target.currentSrc\n\n    if (img.decode) {\n      // Decode the image through javascript to support our transition\n      img\n        .decode()\n        .catch(() => {\n          // ignore error, we just go forward\n        })\n        .then(() => {\n          toggleLoaded(true)\n        })\n    } else {\n      toggleLoaded(true)\n    }\n  }\n\n  // Polyfill \"object-fit\" if unsupported (mostly IE)\n  if (ref?.current && !(`objectFit` in document.documentElement.style)) {\n    ref.current.dataset.objectFit = style.objectFit ?? `cover`\n    ref.current.dataset.objectPosition = `${style.objectPosition ?? `50% 50%`}`\n    applyPolyfill(ref)\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n    onLoad,\n    ref,\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport function useImageLoaded(\n  cacheKey: string,\n  loading: \"lazy\" | \"eager\",\n  ref: any\n): {\n  isLoaded: boolean\n  isLoading: boolean\n  toggleLoaded: Dispatch<SetStateAction<boolean>>\n} {\n  const [isLoaded, toggleLoaded] = useState(false)\n  const [isLoading, toggleIsLoading] = useState(loading === `eager`)\n\n  const rAF =\n    typeof window !== `undefined` && `requestAnimationFrame` in window\n      ? requestAnimationFrame\n      : function (cb: TimerHandler): number {\n          return setTimeout(cb, 16)\n        }\n  const cRAF =\n    typeof window !== `undefined` && `cancelAnimationFrame` in window\n      ? cancelAnimationFrame\n      : clearTimeout\n\n  useEffect(() => {\n    let interval: number\n    // @see https://stackoverflow.com/questions/44074747/componentdidmount-called-before-ref-callback/50019873#50019873\n    function toggleIfRefExists(): void {\n      if (ref.current) {\n        if (loading === `eager` && ref.current.complete) {\n          storeImageloaded(cacheKey)\n          toggleLoaded(true)\n        } else {\n          toggleIsLoading(true)\n        }\n      } else {\n        interval = rAF(toggleIfRefExists)\n      }\n    }\n    toggleIfRefExists()\n\n    return (): void => {\n      cRAF(interval)\n    }\n  }, [])\n\n  return {\n    isLoading,\n    isLoaded,\n    toggleLoaded,\n  }\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","/* eslint-disable filenames/match-regex */\nimport React, {\n  FunctionComponent,\n  ImgHTMLAttributes,\n  forwardRef,\n  LegacyRef,\n} from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n  innerRef: LegacyRef<HTMLImageElement>\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  innerRef,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n      ref={innerRef}\n    />\n  )\n}\n\nexport const Picture = forwardRef<HTMLImageElement, PictureProps>(\n  function Picture(\n    { fallback, sources = [], shouldLoad = true, ...props },\n    ref\n  ) {\n    const sizes = props.sizes || fallback?.sizes\n    const fallbackImage = (\n      <Image\n        {...props}\n        {...fallback}\n        sizes={sizes}\n        shouldLoad={shouldLoad}\n        innerRef={ref}\n      />\n    )\n\n    if (!sources.length) {\n      return fallbackImage\n    }\n\n    return (\n      <picture>\n        {sources.map(({ media, srcSet, type }) => (\n          <source\n            key={`${media}-${type}-${srcSet}`}\n            type={type}\n            media={media}\n            srcSet={shouldLoad ? srcSet : undefined}\n            data-srcset={!shouldLoad ? srcSet : undefined}\n            sizes={sizes}\n          />\n        ))}\n        {fallbackImage}\n      </picture>\n    )\n  }\n)\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { forwardRef } from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage = forwardRef<HTMLImageElement, MainImageProps>(\n  function MainImage(props, ref) {\n    return (\n      <>\n        <Picture ref={ref} {...props} />\n        <noscript>\n          <Picture {...props} shouldLoad={true} />\n        </noscript>\n      </>\n    )\n  }\n)\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../global.d.ts\" />\n\nimport React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer: string | null = null\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {\n          // eslint-disable-next-line no-undef\n          SERVER && <NativeScriptLoading />\n        }\n      </Fragment>\n    )\n  }\n","import React, {\n  ElementType,\n  FunctionComponent,\n  CSSProperties,\n  WeakValidationMap,\n} from \"react\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImageHydrator: FunctionComponent<{\n  as?: ElementType\n  style?: CSSProperties\n  className?: string\n}> = function GatsbyImageHydrator({ as: Type = `div`, children, ...props }) {\n  return <Type {...props}>{children}</Type>\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n    if (preactClass) {\n      className = preactClass\n    }\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return (\n      <GatsbyImageHydrator\n        {...wrapperProps}\n        as={as}\n        style={{\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        }}\n        className={`${wClass}${className ? ` ${className}` : ``}`}\n      >\n        <LayoutWrapper layout={layout} width={width} height={height}>\n          <Placeholder\n            {...getPlaceholderProps(\n              placeholder,\n              false,\n              layout,\n              width,\n              height,\n              placeholderBackgroundColor,\n              objectFit,\n              objectPosition\n            )}\n          />\n\n          <MainImage\n            data-gatsby-image-ssr=\"\"\n            className={imgClassName}\n            {...(props as Omit<MainImageProps, \"images\" | \"fallback\">)}\n            // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n            {...getMainProps(\n              loading === `eager`,\n              false,\n              cleanedImages,\n              loading,\n              undefined,\n              undefined,\n              undefined,\n              imgStyle\n            )}\n          />\n        </LayoutWrapper>\n      </GatsbyImageHydrator>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nconst Image = ({ className, title, filename, withFallback = false }) => {\n  const imageData = getImage(filename);\n  const data = useStaticQuery(graphql`\n    query {\n      fallbackImage: file(relativePath: { eq: \"fallback.svg\" }) {\n        publicURL\n      }\n    }\n  `);\n\n  if (!imageData) {\n    return withFallback ? (\n      <img\n        src={data.fallbackImage.publicURL}\n        alt={\"Fallback\"}\n        className={className}\n      />\n    ) : null;\n  }\n\n  return <GatsbyImage className={className} image={imageData} alt={title} />;\n};\n\nexport default Image;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n};\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Seo;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\n\nimport Image from \"./Image\";\n\nconst PostLayout = ({\n  featuredImage,\n  title,\n  content,\n  date,\n  datetime,\n  previous,\n  next,\n}) => {\n  let previousLink;\n  let nextLink;\n\n  if (previous && previous?.slug) {\n    previousLink = (\n      <Link className=\"pagination-prev\" to={`/${previous.slug}`}>\n        {previous.frontmatter.title}\n      </Link>\n    );\n  }\n  if (next && next?.slug) {\n    nextLink = (\n      <Link className=\"pagination-next\" to={`/${next.slug}`}>\n        {next.frontmatter.title}\n      </Link>\n    );\n  }\n\n  return (\n    <>\n      <article className=\"text-base\">\n        <Image\n          className=\"max-w-md rounded-lg ml-10 mb-10 float-right\"\n          filename={featuredImage}\n          title={title}\n        />\n\n        <header className=\"mb-5\">\n          <time className=\"block text-gray mb-2\" dateTime={datetime}>\n            {date}\n          </time>\n          <h1 className=\"text-5xl font-semibold capitalize\">{title}</h1>\n        </header>\n        <MDXRenderer>{content}</MDXRenderer>\n      </article>\n      <hr className=\"my-5\" />\n      <div className=\"flex justify-between\">\n        {previousLink}\n        {nextLink}\n      </div>\n    </>\n  );\n};\n\nexport default PostLayout;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Seo from \"../components/Seo\";\nimport PostLayout from \"../components/PostLayout\";\n\nconst BlogPost = ({ data, pageContext }) => {\n  const {\n    id,\n    body,\n    frontmatter: { featuredImage, title, date, datetime },\n  } = data.mdx;\n\n  return (\n    <>\n      <Seo title={title} />\n      <hr className=\"border-gray-light mb-8\" />\n      <PostLayout\n        featuredImage={featuredImage}\n        title={title}\n        content={body}\n        date={date}\n        datetime={datetime}\n        previous={data.previous}\n        next={data.next}\n        key={id}\n      />\n    </>\n  );\n};\n\nexport default BlogPost;\n\nexport const query = graphql`\n  query BLOG_POST_BY_SLUG(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    mdx(id: { eq: $id }) {\n      id\n      slug\n      body\n      frontmatter {\n        datetime: date\n        date(formatString: \"DD MMMM YYYY\")\n        title\n        featuredImage {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      slug\n      frontmatter {\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      slug\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["MDXRenderer","require","module","exports","React","mdx","useMDXScope","scope","children","_ref","props","mdxScope","End","useMemo","fullScope","keys","Object","values","map","key","fn","Function","createElement","DEFAULT_PIXEL_DENSITIES","DEFAULT_BREAKPOINTS","EVERY_BREAKPOINT","warn","message","console","sortNumeric","a","b","getSrcSet","images","image","src","width","join","formatFromFilename","filename","dot","lastIndexOf","ext","slice","length","setDefaultDimensions","args","layout","height","sourceMetadata","breakpoints","aspectRatio","formats","u","format","toLowerCase","camelCase","Math","round","getLowResolutionImageURL","generateImageSource","fit","options","_generateImageSource","generateImageData","pluginName","reporter","backgroundColor","placeholderURL","Error","Set","size","has","add","imageSizes","imgDimensions","erroneousUserDimensions","entries","filter","_","dim","outputPixelDensities","densities","dedupeAndSortDensities","calculated","getDimensionsAndAspectRatio","originalWidth","fixedDimension","stripIndent","sizes","density","presentationWidth","presentationHeight","unscaledWidth","fixedImageSizes","responsiveImageSizes","calculateImageSizes","result","sources","getSizes","forEach","imageSrc","Boolean","unscaled","find","img","fallback","srcSet","push","type","imageProps","placeholder","Array","from","concat","sort","min","includes","dimensions","imageAspectRatio","widthOption","Number","MAX_SAFE_INTEGER","heightOption","max","gatsbyImageIsInstalled","GATSBY___IMAGE","getImage","node","_node$images","_node$images$fallback","isGatsbyImageData","gatsbyImageData","isGatsbyImageDataParent","childImageSharp","_node$childImageSharp","getSrc","_getImage","_getImage$images","_getImage$images$fall","_getImage2","_getImage2$images","_getImage2$images$fal","getImageData","baseUrl","urlBuilder","sourceWidth","sourceHeight","_breakpoints","withArtDirection","defaultImage","artDirected","output","media","process","env","NODE_ENV","source","Image","loading","alt","shouldLoad","innerRef","decoding","undefined","ref","Picture","forwardRef","r","o","fallbackImage","propTypes","PropTypes","string","isRequired","bool","displayName","exact","arrayOf","oneOfType","Placeholder","_Picture$propTypes","propName","componentName","MainImage","NativeScriptLoading","dangerouslySetInnerHTML","__html","Sizer","style","paddingTop","maxWidth","display","role","position","LayoutWrapper","Fragment","removeNewLines","str","replace","GatsbyImageHydrator","as","Type","GatsbyImage","className","preactClass","imgClassName","imgStyle","objectFit","objectPosition","placeholderBackgroundColor","wrapperStyle","overflow","verticalAlign","getWrapperProps","wStyle","wClass","wrapperProps","cleanedImages","isLoaded","top","left","bottom","right","opacity","transition","getPlaceholderProps","isLoading","toggleLoaded","cacheKey","transform","willChange","onLoad","e","target","currentTarget","currentSrc","decode","then","getMainProps","StaticImage","imageData","__imageData","__error","_getStaticImage","GatsbyImageServer","checkDimensionProps","number","validLayouts","useStaticQuery","title","withFallback","data","publicURL","Helmet","Seo","description","lang","meta","site","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","defaultProps","object","Link","PostLayout","featuredImage","date","datetime","previous","next","previousLink","nextLink","slug","frontmatter","BlogPost","pageContext","id","body","query"],"sourceRoot":""}